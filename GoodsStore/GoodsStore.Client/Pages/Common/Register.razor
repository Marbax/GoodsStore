@page "/register"
@inject UserAuthVM _userAuthVM
@inject NavigationManager _navMngr
@implements IDisposable
@inject IStringLocalizer<Resource> localizer

<h3><b>@localizer["Register"]</b></h3>
<hr />

@if (!_userAuthVM.IsReady && string.IsNullOrEmpty(_userAuthVM.Message))
{
    <Loading>@localizer["Loading"]...</Loading>
}
else
{
    //TODO: Thinks that user already exists on registration
    <label>@_userAuthVM.Message</label>
    <EditForm Model="@_userAuthVM" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="col-lg-6 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline w-25" for="email">@localizer["Email"]:</label>
            <InputText type="text" @bind-Value="_userAuthVM.ProxyUser.Email" name="email" class="form-control w-75 d-inline float-right" placeholder="@localizer["Email"]" />
            <ValidationMessage For="@(() => _userAuthVM.ProxyUser.Email)" />
        </div>
        <div class="col-lg-6 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline w-25" for="password">@localizer["Password"]:</label>
            <InputText type="password" @bind-Value="_userAuthVM.ProxyUser.Password" name="password" class="form-control w-75 d-inline float-right" placeholder="@localizer["Password"]" />
            <ValidationMessage For="@(() => _userAuthVM.ProxyUser.Password)" />
        </div>
        <div class="col-lg-6 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline w-25" for="confirmPassword">@localizer["ConfirmPassword"]:</label>
            <InputText type="password" @bind-Value="_userAuthVM.PasswordConfirm" name="confirmPassword" class="form-control w-75 d-inline float-right" placeholder="@localizer["ConfirmPassword"]" />
            <ValidationMessage For="@(() => _userAuthVM.PasswordConfirm)" />
        </div>
        <div class="col-lg-5 col-10 m-2">
            <button class="btn btn-success float-right" type="submit">@localizer["Register"]</button>
        </div>
    </EditForm>
}

@code {

    protected override void OnInitialized()
    {
        _userAuthVM.OnChange += StateHasChanged;
    }

    private async Task HandleValidSubmit()
    {
        if (await _userAuthVM.Register())
            _navMngr.NavigateTo("/profile");
    }

    public void Dispose()
    {
        _userAuthVM.OnChange -= StateHasChanged;
    }

}
