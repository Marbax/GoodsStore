@page "/Administration/User/Edit"
@page "/Administration/User/Edit/{ItemId:int}"
@inject IGenericItemVM<UserDTO> _vm
@inject IGenericCollectionVM<RoleDTO> _roles
@inject IStringLocalizer<Resource> localizer
@layout AdminiistrationLayout

@if (!_vm.IsReady)
{
    <Loading>@localizer["Loading"]...</Loading>
}
else
{
    <label class="text-muted mx-2">@_vm.Message</label>

    <EditForm Model="@_vm" OnValidSubmit="@HandleValidSubmit">
        <ValidationSummary />
        <div class="col-lg-5 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline" for="email">@localizer["Email"]:</label>
            <InputText type="text" @bind-Value="_vm.Item.Email" name="email" class="form-control w-auto d-inline float-right" placeholder="@localizer["Email"]" />
            <ValidationMessage For="@(() => _vm.Item.Email)" />
        </div>
        <div class="col-lg-5 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline" for="password">@localizer["Password"]:</label>
            <InputText type="password" @bind-Value="_vm.Item.Password" name="password" class="form-control w-auto d-inline float-right" placeholder="@localizer["Password"]" />
            <ValidationMessage For="@(() => _vm.Item.Password)" />
        </div>
        <div class="col-lg-5 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline" for="address">@localizer["Address"]:</label>
            <InputText type="text" @bind-Value="_vm.Item.Address" name="address" class="form-control w-auto d-inline float-right" placeholder="@localizer["Address"]" />
            <ValidationMessage For="@(() => _vm.Item.Address)" />
        </div>
        <div class="col-lg-5 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline" for="country">@localizer["Country"]:</label>
            <InputText type="text" @bind-Value="_vm.Item.Country" name="country" class="form-control w-auto d-inline float-right" placeholder="@localizer["Country"]" />
            <ValidationMessage For="@(() => _vm.Item.Country)" />
        </div>
        <div class="col-lg-5 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline" for="firstName">@localizer["FirstName"]:</label>
            <InputText type="text" @bind-Value="_vm.Item.Name" name="firstName" class="form-control w-auto d-inline float-right" placeholder="@localizer["FirstName"]" />
            <ValidationMessage For="@(() => _vm.Item.Name)" />
        </div>
        <div class="col-lg-5 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline" for="lastName">@localizer["LastName"]:</label>
            <InputText type="text" @bind-Value="_vm.Item.Lastname" name="lastName" class="form-control w-auto d-inline float-right" placeholder="@localizer["LastName"]" />
            <ValidationMessage For="@(() => _vm.Item.Lastname)" />
        </div>
        <div class="col-lg-5 col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline" for="phone">@localizer["Phone"]:</label>
            <InputText type="text" @bind-Value="_vm.Item.Phone" name="phone" class="form-control w-auto d-inline float-right" placeholder="@localizer["Phone"]" />
            <ValidationMessage For="@(() => _vm.Item.Phone)" />
        </div>
        <div class="col-10 m-2 form-group d-inline-block">
            <label class="control-label font-weight-bold d-inline" for="token">@localizer["Token"]:</label>
            <InputText type="textarea" disabled @bind-Value="_vm.Item.Token" name="token" class="form-control col-auto-5 col-sm-12" placeholder="@localizer["Token"]" />
        </div>
        @if (_roles.IsReady)
        {
            //TODO: make it looks like some normal and adaptive tag list
            <div class="col-10 m-2 form-group d-inline-block">
                <label class="control-label font-weight-bold d-inline" for="roles">@localizer["Roles"]:</label>
                <div class="col-12" name="roles">
                    @foreach (var item in _roles.Items)
                    {
                        <div class="mx-2">
                            <label for="@($"{item.Id}_{item.Title}")">@item.Title</label>
                            <input type="checkbox" id="@($"{item.Id}_{item.Title}")"
                                   checked=@(_vm.Item.RoleIds.Count()>0 && _vm.Item.RoleIds.Contains(item.Id))
                                   @onchange="@((e) => CheckboxChanged(e, item.Id))" />
                        </div>
                    }
                </div>
            </div>
        }
        @if (ItemId > 0)
        {
            <div class="col-lg-5 col-10 m-2">
                <button class="btn btn-success float-right" type="submit">@localizer["Update"]</button>
            </div>
        }
        else
        {
            <div class="col-lg-5 col-10 m-2">
                <button class="btn btn-primary float-right" type="submit">@localizer["Add"]</button>
            </div>
        }
    </EditForm>
}

@code {
    [Parameter]
    public int ItemId { get; set; } = -1;

    protected override async Task OnInitializedAsync()
    {
        if (ItemId > 0)
            await _vm.GetItemAsync(ItemId);
        else
            _vm.Item = new UserDTO();
        await _roles.GetItemsAsync();
    }

    private async Task HandleValidSubmit()
    {
        if (ItemId > 0)
            await _vm.UpdateItem();
        else
            await _vm.AddItem();
    }

    private void CheckboxChanged(ChangeEventArgs e, int id)
    {
        var userRoles = _vm.Item.RoleIds.ToList();
        if ((bool)e.Value == true)
        {
            userRoles.Add(id);
            _vm.Item.RoleIds = userRoles;
        }
        else if ((bool)e.Value == false)
        {
            userRoles.RemoveAll(i => i == id);
            _vm.Item.RoleIds = userRoles;
        }
    }

}
