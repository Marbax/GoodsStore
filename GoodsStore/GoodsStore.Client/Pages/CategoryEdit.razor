@page "/Category/Edit"
@page "/Category/Edit/{CategoryId:int}"
@inject IGenericItemVM<CategoryDTO> _catVM

@if (!_catVM.IsReady)
{
    <em>Loading...</em>
}
else
{
    <div class="row flex justify-content-center">
        <div class="col-md-8 col-sm-11 p-1">

            <div class="form-group row">
                <label class="control-label col-md-4">Id:</label>
                <label class="control-label col">@_catVM.Item.Id</label>
            </div>

            <div class="form-group row">
                <label class="control-label col-md-4" for="title">Title:</label>
                <input class="form-control col" name="title" type="text" @bind-value="_catVM.Item.Title" placeholder="Title" />
            </div>

            @if (_catVM.Item.Goods.Count() > 0)
            {
                <div class="form-group row">
                    <label class="control-label col-md-4">Goods Ids: </label>
                    <label class="control-label col">@_catVM.Item.Goods.ToList().Select(i => i.ToString()).Aggregate((f, s) => f + " , " + s)</label>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-4">Goods Count: </label>
                    <label class="control-label col">@_catVM.Item.Goods.Count()</label>
                </div>
            }

            @if (CategoryId > 0)
            {
                <button class="btn btn-primary" @onclick="_catVM.UpdateItem">Update</button>
            }
            else
            {
                <button class="btn btn-primary" @onclick="_catVM.AddItem">Add</button>
            }
            <span class="text-muted">@_catVM.Message</span>
        </div>
    </div>

}

@code {
    [Parameter]
    public int CategoryId { get; set; } = -1;

    protected override async Task OnInitializedAsync()
    {
        if (CategoryId > 0)
            await _catVM.GetItemAsync(CategoryId);
        else
            _catVM.Item = new CategoryDTO();
    }
}
