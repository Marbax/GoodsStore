@page "/Category/Edit"
@page "/Category/Edit/{ItemId:int}"
@inject IGenericItemVM<CategoryDTO> _vm
@inject IStringLocalizer<Resource> localizer

@if (!_vm.IsReady)
{
    <Loading>@localizer["Loading"]...</Loading>
}
else
{
    <label class="text-muted mx-2">@_vm.Message</label>

    <EditForm Model="@_vm" OnValidSubmit="@HandleValidSubmit">
        <ValidationSummary />
        <div class="col-10 m-2 form-group flex-row">
            <label class="control-label col-md-4 font-weight-bold" for="title">@localizer["Title"]:</label>
            <InputText type="text" @bind-Value="_vm.Item.Title" name="title" class="form-control col" placeholder="@localizer["Title"]" />
            <ValidationMessage For="@(() => _vm.Item.Title)" />
        </div>
        @if (_vm.Item.Goods.Count() > 0)
        {
            <div class="col-10 m-2 form-group flex-row">
                <label class="control-label col-md-4 font-weight-bold">@localizer["GoodsIds"]: </label>
                <label class="control-label col">@_vm.Item.Goods.ToList().Select(i => i.ToString()).Aggregate((f, s) => f + " , " + s)</label>
            </div>
            <div class="col-10 m-2 form-group flex-row">
                <label class="control-label col-md-4 font-weight-bold">@localizer["GoodsCount"]: </label>
                <label class="control-label col">@_vm.Item.Goods.Count()</label>
            </div>
        }
        @if (ItemId > 0)
        {
            <div class="col-10 m-2">
                <button class="btn btn-success float-right" type="submit">@localizer["Update"]</button>
            </div>
        }
        else
        {
            <div class="col-10 m-2">
                <button class="btn btn-success float-right" type="submit">@localizer["Add"]</button>
            </div>
        }
    </EditForm>

}

@code {
    [Parameter]
    public int ItemId { get; set; } = -1;

    protected override async Task OnInitializedAsync()
    {
        if (ItemId > 0)
            await _vm.GetItemAsync(ItemId);
        else
            _vm.Item = new CategoryDTO();
    }

    private async Task HandleValidSubmit()
    {
        if (ItemId > 0)
            await _vm.UpdateItem();
        else
            await _vm.AddItem();
    }

}
